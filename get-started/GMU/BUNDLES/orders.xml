<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
    <l7:References>
        <l7:Item>
            <l7:Name>cluster.hostname</l7:Name>
            <l7:Id>0000000000000000fffffffffff5519f</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2017-03-29T11:05:57.551Z</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="0000000000000000fffffffffff5519f" version="1">
                    <l7:Name>cluster.hostname</l7:Name>
                    <l7:Value>localhost</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>orders</l7:Name>
            <l7:Id>a4622445105ca2893b48b10d1e77879c</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2017-03-29T11:05:57.597Z</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="a4622445105ca2893b48b10d1e77879c" version="2">
                    <l7:ServiceDetail folderId="0000000000000000ffffffffffffec76" id="a4622445105ca2893b48b10d1e77879c" version="2">
                        <l7:Name>orders</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/recSvc/v1/users/*/orders</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>32</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="31">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** microservices demo v.2.1 ******** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="********        Darrin Solomon         ******** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:CaptureVar stringValue="customer"/&gt;
            &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="request.http.uri"/&gt;
            &lt;L7p:Regex stringValue="recSvc\/v1\/users\/(.*?)\/orders"/&gt;
            &lt;L7p:Replacement stringValue=""/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="http://consul:8500/v1/health/service/lac_admin"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="recommendations"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:Expression stringValue="$..[?(@.Service=='lac_admin')].Address"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="recommendations"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:VariablePrefix stringValue="recommendations"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="GET IP FOR RECOMMENDATIONS"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="http://consul:8500/v1/health/service/orders_recommendations_microservice"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="orders"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:Expression stringValue="$..[?(@.Service=='orders_recommendations_microservice')].Address"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="orders"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:VariablePrefix stringValue="orders"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="GET IP FOR ORDERS"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="ROUTE TO CONSUL"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                &lt;L7p:VariableToSet stringValue="cachehit"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:CacheLookup&gt;
                            &lt;L7p:CacheEntryKey stringValue="${customer}-endpoints_${gateway.cluster.hostname}"/&gt;
                            &lt;L7p:CacheId stringValue="EndPointCache"/&gt;
                            &lt;L7p:ContentTypeOverride stringValue="application/json; charset=utf-8"/&gt;
                            &lt;L7p:MaxEntryAgeSeconds stringValue="10"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="orders"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:CacheLookup&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="cachehit"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:CreateRoutingStrategy&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Set available routes for endpoint to list in array"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Routes routes="included"&gt;
                            &lt;L7p:item route="included"&gt;
                                &lt;L7p:Name stringValue="${orders.results}"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Routes&gt;
                        &lt;L7p:StrategyDescription stringValue="Round-Robin"/&gt;
                        &lt;L7p:StrategyName stringValue="robin"/&gt;
                    &lt;/L7p:CreateRoutingStrategy&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="strategy.routeList" variablePrefix="routeList"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                            &lt;L7p:DataType variableDataType="int"/&gt;
                            &lt;L7p:VariableToSet stringValue="feedback.current.status"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ExecuteRoutingStrategy&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Pick next route for strategy, ignoring any down routes (feedback = -1)"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                        &lt;/L7p:ExecuteRoutingStrategy&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${attemptedroutes}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="hello"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyb3V0ZX0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="attemptedroutes"/&gt;
                                &lt;/L7p:SetVariable&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHthdHRlbXB0ZWRyb3V0ZXN9ICR7cm91dGV9"/&gt;
                                &lt;L7p:VariableToSet stringValue="attemptedroutes"/&gt;
                            &lt;/L7p:SetVariable&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:HttpRoutingAssertion&gt;
                                    &lt;L7p:ConnectionTimeout stringValue="3000"/&gt;
                                    &lt;L7p:HttpMethod httpMethod="GET"/&gt;
                                    &lt;L7p:MaxRetries intValue="100"/&gt;
                                    &lt;L7p:ProtectedServiceUrl stringValue="http://${route}:8080/rest/default/svcOrders/v1/Orders?sysfilter=equal(customerNumber:'${customer}')"/&gt;
                                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:CustomizeValue stringValue="CALiveAPICreator zFeg53T5ESosM2xqM86s:1"/&gt;
                                    &lt;L7p:Name stringValue="Authorization"/&gt;
                                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Rules&gt;
                                    &lt;/L7p:RequestHeaderRules&gt;
                                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                                    &lt;/L7p:RequestParamRules&gt;
                                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Rules&gt;
                                    &lt;/L7p:ResponseHeaderRules&gt;
                                    &lt;L7p:ResponseMsgDest stringValue="orders"/&gt;
                                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                                &lt;/L7p:HttpRoutingAssertion&gt;
                                &lt;L7p:CacheStorage&gt;
                                    &lt;L7p:CacheEntryKey stringValue="${customer}-endpoints_${gateway.cluster.hostname}"/&gt;
                                    &lt;L7p:CacheId stringValue="EndPointCache"/&gt;
                                    &lt;L7p:MaxEntries stringValue="100"/&gt;
                                    &lt;L7p:MaxEntryAgeSeconds stringValue="120"/&gt;
                                    &lt;L7p:MaxEntrySizeBytes stringValue="1000000"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="orders"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:CacheStorage&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Route to endpoint successful branch"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Route failed, mark as down"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="LTE="/&gt;
                                &lt;L7p:DataType variableDataType="int"/&gt;
                                &lt;L7p:VariableToSet stringValue="feedback.current.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHthc3NlcnRpb24ubGF0ZW5jeS5tc30="/&gt;
                            &lt;L7p:VariableToSet stringValue="feedback.current.latency"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtodHRwcm91dGluZy5yZWFzb25Db2RlfQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="feedback.current.reasonCode"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${feedback.current.status}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="-1"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="routeList.break"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // If route failed, continue loop and route again, else break to stop routing loop"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:ProcessRoutingStrategyResult/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Dynamically route to endpoint logic"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/L7p:ForEachLoop&gt;
                &lt;/wsp:All&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="GET ORDER PAYLOAD"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="http://${recommendations.result}:8080/rest/default/svcRecs/v1/recommendations"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:CustomizeValue stringValue="CALiveAPICreator Y1tmNkYbxu5t93ixTCtJ:1"/&gt;
                                &lt;L7p:Name stringValue="Authorization"/&gt;
                                &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="recommendations"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:Expression stringValue="$..orderdetails_ibfk_2_products.productCode"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="orders"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:VariablePrefix stringValue="productCodes"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwcm9kdWN0Q29kZXMucmVzdWx0c30="/&gt;
                    &lt;L7p:VariableToSet stringValue="productCode"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="productCode"/&gt;
                    &lt;L7p:OutputVariable stringValue="productCode"/&gt;
                &lt;/L7p:Split&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwcm9kdWN0Q29kZS5sZW5ndGh9"/&gt;
                    &lt;L7p:VariableToSet stringValue="productCodeLength"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="ew=="/&gt;
                    &lt;L7p:VariableToSet stringValue="out"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// since array starts at 0, we want to match at length minus 1"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:VariablePrefix stringValue="productCodeLoop"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="$productCodeLength - 1"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// the math operand goes to 1 decimal --- convert to integer"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="productCodeLoop.result"/&gt;
                    &lt;L7p:Regex stringValue="\.0"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="productCode" variablePrefix="productCodeOut"&gt;
                    &lt;L7p:EvaluateJsonPathExpression&gt;
                        &lt;L7p:Expression stringValue="$..[?(@.productCode=='${productCodeOut.current}')].r_productName"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="recommendations"/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                        &lt;L7p:VariablePrefix stringValue="r_productName"/&gt;
                    &lt;/L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:EvaluateJsonPathExpression&gt;
                        &lt;L7p:Expression stringValue="$..[?(@.productCode=='${productCodeOut.current}')].productName"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="recommendations"/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                        &lt;L7p:VariablePrefix stringValue="productName"/&gt;
                    &lt;/L7p:EvaluateJsonPathExpression&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyX3Byb2R1Y3ROYW1lLnJlc3VsdHN9"/&gt;
                            &lt;L7p:VariableToSet stringValue="r_productName"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Split&gt;
                            &lt;L7p:InputVariable stringValue="r_productName"/&gt;
                            &lt;L7p:OutputVariable stringValue="r_productName"/&gt;
                        &lt;/L7p:Split&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyX3Byb2R1Y3ROYW1lLmxlbmd0aH0="/&gt;
                            &lt;L7p:VariableToSet stringValue="r_productNameLength"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="Ww=="/&gt;
                            &lt;L7p:VariableToSet stringValue="r_out"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// since array starts at 0, we want to match at length minus 1"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="r_productNameLoop"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$r_productNameLength - 1"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// the math operand goes to 1 decimal --- convert to integer"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="r_productNameLoop.result"/&gt;
                            &lt;L7p:Regex stringValue="\.0"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="r_productName" variablePrefix="r_productNameOut"&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${r_productNameOut.iterations}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${r_productNameLoop.result}"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="${r_productNameLoop.result}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyX291dH0NCiIke3JfcHJvZHVjdE5hbWVPdXQuY3VycmVudH0iXQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="r_out"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// this is the last match, so we close the json message with this one"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyX291dH0NCiIke3JfcHJvZHVjdE5hbWVPdXQuY3VycmVudH0iLA=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="r_out"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// this is all but last match, adding in each name value pair"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                            &lt;/wsp:OneOrMore&gt;
                        &lt;/L7p:ForEachLoop&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:Expression1 stringValue="${productCodeOut.iterations}"/&gt;
                                &lt;L7p:Expression2 stringValue="${productCodeLoop.result}"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="${productCodeLoop.result}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtvdXR9DQoiJHtwcm9kdWN0Q29kZU91dC5jdXJyZW50fS0ke3Byb2R1Y3ROYW1lLnJlc3VsdH0iOiR7cl9vdXR9DQp9"/&gt;
                                &lt;L7p:VariableToSet stringValue="out"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// this is the last match, so we close the json message with this one"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtvdXR9DQoiJHtwcm9kdWN0Q29kZU91dC5jdXJyZW50fS0ke3Byb2R1Y3ROYW1lLnJlc3VsdH0iOiR7cl9vdXR9LA=="/&gt;
                                &lt;L7p:VariableToSet stringValue="out"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// this is all but last match, adding in each name value pair"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="ROUTE TO LAC Microservice"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="http://localhost:8080/newyorktimes"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwb25zZS5tYWlucGFydH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="NYT"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="NYT"/&gt;
                    &lt;L7p:OutputVariable stringValue="NYT"/&gt;
                &lt;/L7p:Split&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="ew0KCSJDaXJjdWl0QnJlYWtlclJlc3BvbnNlIjogWw0KCQkiJHtOWVRbMF19IiwNCgkJIiR7TllUWzFdfSIsDQoJCSIke05ZVFsyXX0iLA0KCQkiJHtOWVRbM119IiwNCgkJIiR7TllUWzRdfSIsDQoJCSIke05ZVFs1XX0iLA0KCQkiJHtOWVRbNl19IiwNCgkJIiR7TllUWzddfSIsDQoJCSIke05ZVFs4XX0iDQoJXQ0KfQ=="/&gt;
                    &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="out"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="CIRCUIT BREAKER"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="GET RECOMMENDATION"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:Base64ResponseBody stringValue="JHtvdXR9"/&gt;
            &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
    </l7:References>
    <l7:Mappings> 
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffff5519f" srcUri="https://342915df408f:8443/restman/1.0/clusterProperties/0000000000000000fffffffffff5519f" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffec76" srcUri="https://342915df408f:8443/restman/1.0/folders/0000000000000000ffffffffffffec76" type="FOLDER">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="a4622445105ca2893b48b10d1e77879c" srcUri="https://342915df408f:8443/restman/1.0/services/a4622445105ca2893b48b10d1e77879c" type="SERVICE"/>
    </l7:Mappings>
</l7:Bundle>
